# SPDX-FileCopyrightText: 2025 BrainCraft.io
# SPDX-License-Identifier: Apache-2.0

name: SPDX License Header Check

# This workflow validates SPDX license headers and REUSE compliance
# It serves dual purposes:
# 1. Runs directly in this repository on push/PR
# 2. Can be called as a reusable workflow from other repositories
#
# To use in other repositories:
# ```yaml
# jobs:
#   license-check:
#     uses: braincraftio/.github/.github/workflows/spdx-header-check.yml@main
# ```

on:
  # Direct triggers for this repository
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  
  # Allow this workflow to be called by other repositories
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use for REUSE tool'
        required: false
        type: string
        default: '3.x'
      reuse-version:
        description: 'REUSE tool version to install'
        required: false
        type: string
        default: 'latest'
      working-directory:
        description: 'Working directory for the check'
        required: false
        type: string
        default: '.'

jobs:
  reuse-lint:
    name: Validate SPDX License Headers
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better REUSE analysis
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version || '3.x' }}

      - name: Cache REUSE Tool
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-reuse-${{ inputs.reuse-version || 'latest' }}
          restore-keys: |
            ${{ runner.os }}-pip-reuse-
            ${{ runner.os }}-pip-

      - name: Install REUSE Tool
        run: |
          if [ "${{ inputs.reuse-version || 'latest' }}" = "latest" ]; then
            pip install --upgrade pip
            pip install reuse
          else
            pip install --upgrade pip
            pip install reuse==${{ inputs.reuse-version }}
          fi
          echo "REUSE version: $(reuse --version)"

      - name: Run REUSE Lint
        working-directory: ${{ inputs.working-directory || '.' }}
        run: |
          echo "::group::REUSE Compliance Check"
          reuse lint
          echo "::endgroup::"

      - name: Generate SPDX Bill of Materials
        if: success()
        working-directory: ${{ inputs.working-directory || '.' }}
        run: |
          echo "::group::SPDX SBOM Generation"
          reuse spdx > spdx-sbom.json
          echo "Generated SPDX SBOM: spdx-sbom.json"
          echo "::endgroup::"

      - name: Upload SPDX SBOM
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: spdx-sbom
          path: ${{ inputs.working-directory || '.' }}/spdx-sbom.json
          retention-days: 30

      - name: Check for Missing Headers
        if: failure()
        working-directory: ${{ inputs.working-directory || '.' }}
        run: |
          echo "::group::Files Missing SPDX Headers"
          echo "The following files may be missing SPDX headers:"
          find . -type f \( -name "*.md" -o -name "*.yml" -o -name "*.yaml" -o -name "*.js" -o -name "*.ts" -o -name "*.py" -o -name "*.go" \) -exec grep -L "SPDX-" {} \; | grep -v node_modules | grep -v ".git" | head -20
          echo "::endgroup::"
          echo ""
          echo "To add SPDX headers, use:"
          echo "  reuse addheader --copyright 'Your Organization' --license Apache-2.0 <filename>"
          echo ""
          echo "For more information, see: https://reuse.software/"

# Usage Examples:
# 
# 1. Call this workflow from another repository:
#    ```yaml
#    jobs:
#      license-check:
#        uses: braincraftio/.github/.github/workflows/spdx-header-check.yml@main
#    ```
#
# 2. Call with custom parameters:
#    ```yaml
#    jobs:
#      license-check:
#        uses: braincraftio/.github/.github/workflows/spdx-header-check.yml@main
#        with:
#          python-version: '3.11'
#          reuse-version: '2.1.0'
#          working-directory: './src'
#    ```