# SPDX-FileCopyrightText: 2025 BrainCraft.io
# SPDX-License-Identifier: Apache-2.0

name: Markdown Link Check

# This workflow validates all markdown links in the repository
# It serves dual purposes:
# 1. Runs directly in this repository on push/PR/schedule
# 2. Can be called as a reusable workflow from other repositories
#
# To use in other repositories:
# ```yaml
# jobs:
#   link-check:
#     uses: braincraftio/.github/.github/workflows/markdown-link-check.yml@main
# ```

on:
  # Direct triggers for this repository
  push:
    branches: [main, master]
    paths:
      - '**.md'
      - '.github/workflows/markdown-link-check.yml'
  pull_request:
    branches: [main, master]
    paths:
      - '**.md'
      - '.github/workflows/markdown-link-check.yml'
  
  # Manual trigger
  workflow_dispatch:
  
  # Scheduled check (weekly on Sundays)
  schedule:
    - cron: '0 0 * * 0'

  # Allow this workflow to be called by other repositories
  workflow_call:
    inputs:
      config-file:
        description: 'Path to markdown-link-check configuration file'
        required: false
        type: string
        default: 'mlc_config.json'
      check-modified-only:
        description: 'Only check modified files in PRs'
        required: false
        type: boolean
        default: false
      file-path:
        description: 'Path to search for markdown files'
        required: false
        type: string
        default: './'
      file-extension:
        description: 'File extension to check'
        required: false
        type: string
        default: '.md'
      max-depth:
        description: 'Maximum depth for directory traversal'
        required: false
        type: number
        default: 3
      fail-on-error:
        description: 'Fail the workflow if broken links are found'
        required: false
        type: boolean
        default: true

jobs:
  check-links:
    name: Validate Markdown Links
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Default Config
        if: inputs.config-file == 'mlc_config.json' || inputs.config-file == null
        run: |
          if [ ! -f "mlc_config.json" ]; then
            echo '{
              "ignorePatterns": [
                { "pattern": "^http://localhost" },
                { "pattern": "^#" }
              ],
              "timeout": "20s",
              "retryOn429": true,
              "retryCount": 3,
              "aliveStatusCodes": [200, 201, 202, 203, 204, 206, 301, 302, 303, 307, 308]
            }' > mlc_config.json
          fi

      - name: Run Markdown Link Check
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'no'
          use-verbose-mode: 'yes'
          config-file: ${{ inputs.config-file || 'mlc_config.json' }}
          check-modified-files-only: ${{ inputs.check-modified-only && 'yes' || 'no' }}
          base-branch: ${{ github.event.repository.default_branch || 'main' }}
          file-extension: ${{ inputs.file-extension || '.md' }}
          max-depth: ${{ inputs.max-depth || 3 }}

      - name: Generate Summary
        if: always()
        run: |
          echo "## Markdown Link Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f "link-check-results.md" ]; then
            cat link-check-results.md >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ All markdown links are valid!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload Detailed Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: markdown-link-check-results
          path: |
            **/*-markdown-link-check.log
            .markdown-link-check.json
          retention-days: 7

      - name: Comment PR
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `
            ❌ **Markdown Link Check Failed**
            
            Some links in your markdown files are broken. Please check the logs for details.
            
            To run this check locally:
            \`\`\`bash
            npm install -g markdown-link-check
            find . -name "*.md" -exec markdown-link-check {} \;
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Fail on Error
        if: failure() && (inputs.fail-on-error || inputs.fail-on-error == null)
        run: |
          echo "❌ Broken links were found in markdown files."
          echo "Please check the workflow summary and artifacts for details."
          exit 1

# Usage Examples:
#
# 1. Basic usage in another repository:
#    ```yaml
#    jobs:
#      link-check:
#        uses: braincraftio/.github/workflows/markdown-link-check.yml@main
#    ```
#
# 2. With custom configuration:
#    ```yaml
#    jobs:
#      link-check:
#        uses: braincraftio/.github/workflows/markdown-link-check.yml@main
#        with:
#          config-file: '.github/markdown-link-config.json'
#          check-modified-only: true
#          fail-on-error: false
#    ```
#
# 3. Check specific directory:
#    ```yaml
#    jobs:
#      link-check:
#        uses: braincraftio/.github/workflows/markdown-link-check.yml@main
#        with:
#          file-path: './docs'
#          max-depth: 5
#    ```